Gene <- name(300)
library(tidyverse) # used for data manipulation
library(rmarkdown) # used for paged_table function
library(wakefield)#to generate vector of random names
library(alluvial)
Gene <- name(300)
Log2FC <- runif(300, min=-5, max=5)
p.adj <- runif(300, min=0, max=0.9)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
Log2FC <- runif(300, min=-2, max=9)
p.adj <- runif(300, min=0, max=0.7)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
Gene <- name(300)
Log2FC <- runif(300, min=-5, max=5)
p.adj <- runif(300, min=0, max=0.9)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
# And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(300, min=-2, max=9)
p.adj <- runif(300, min=0, max=0.7)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Normoxia"
Gene <- name(300)
Log2FC <- runif(300, min=-5, max=5)
p.adj <- runif(300, min=0, max=0.3)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
# And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(300, min=-2, max=9)
p.adj <- runif(300, min=0, max=0.7)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Normoxia"
Gene <- name(300)
Log2FC <- runif(300, min=-5, max=5)
p.adj <- runif(300, min=0, max=0.3)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
# And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(300, min=-2, max=9)
p.adj <- runif(300, min=0, max=0.7)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C2$Condition <- "Normoxia"
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)
View(DF_Iput)
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
View(DF_Iput)
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
View(DF_Iput)
Gene <- name(500)
Log2FC <- runif(500, min=-5, max=5)
p.adj <- runif(500, min=0, max=0.3)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
## And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(500, min=-2, max=9)
p.adj <- runif(500, min=0, max=0.7)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C2$Condition <- "Normoxia"
## Combine the DF and add parameters for e.g. thresholds you apply to extract genes:
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
Gene <- name(100)
Log2FC <- runif(100, min=-5, max=5)
p.adj <- runif(100, min=0, max=0.3)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
## And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(100, min=-2, max=9)
p.adj <- runif(100, min=0, max=0.7)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C2$Condition <- "Normoxia"
## Combine the DF and add parameters for e.g. thresholds you apply to extract genes:
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
DF_Iput$Frequency <-1
alluvial(DF_Iput[,-1], freq=DF_Iput$Frequency,
col = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
border = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
hide = DF_Iput$Frequency == 0,
cex = 0.3,
cex.axis = 0.5)
pdf("AlluvianPlot_Method_Overview.pdf")# Open a pdf file , paper="a4r" --> landscape A4
par(oma=c(2,2,8,2), mar = c(2, 2, 0.1, 2)+0.1)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
alluvial(DF_Iput[,-1], freq=DF_Iput$Frequency,
col = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
border = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
hide = DF_Iput$Frequency == 0,
cex = 0.3,
cex.axis = 0.5)
mtext("Alluvian Plot:Overview", side=3, line=6, cex=1.2, col="black", outer=TRUE)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
mtext("Method", side=3, line=5, cex=0.8, col="black", outer=TRUE)
mtext("188 Metabolites per Sample", side=2, line=0, cex=0.8, col="black", outer=TRUE)
mtext("eV", side=3, line=4, adj=0, cex=0.6, col="blue", outer=TRUE)
mtext("KO", side=3, line=3, adj=0, cex=0.6, col="red", outer=TRUE)
#mtext("XXX", side=3, line=2, adj=0, cex=0.6, col="mediumaquamarine", outer=TRUE)
#mtext("XXX", side=3, line=1, adj=0, cex=0.6, col="mediumorchid", outer=TRUE)
#mtext("XXX", side=3, line=0, adj=0, cex=0.6, col="grey", outer=TRUE)
dev.off()#
pdf("AlluvianPlot_Method_Overview.pdf")# Open a pdf file , paper="a4r" --> landscape A4
par(oma=c(2,2,8,2), mar = c(2, 2, 0.1, 2)+0.1)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
alluvial(DF_Iput[,c(4:7,1)], freq=DF_Iput$Frequency,
col = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
border = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
hide = DF_Iput$Frequency == 0,
cex = 0.3,
cex.axis = 0.5)
mtext("Alluvian Plot:Overview", side=3, line=6, cex=1.2, col="black", outer=TRUE)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
mtext("Method", side=3, line=5, cex=0.8, col="black", outer=TRUE)
mtext("188 Metabolites per Sample", side=2, line=0, cex=0.8, col="black", outer=TRUE)
mtext("eV", side=3, line=4, adj=0, cex=0.6, col="blue", outer=TRUE)
mtext("KO", side=3, line=3, adj=0, cex=0.6, col="red", outer=TRUE)
#mtext("XXX", side=3, line=2, adj=0, cex=0.6, col="mediumaquamarine", outer=TRUE)
#mtext("XXX", side=3, line=1, adj=0, cex=0.6, col="mediumorchid", outer=TRUE)
#mtext("XXX", side=3, line=0, adj=0, cex=0.6, col="grey", outer=TRUE)
dev.off()# Close
#------------------------------
# Make an example DF:
## For example condition one is KO versus WT from cell cultured in Hypoxia
Gene <- name(50)
Log2FC <- runif(50, min=-5, max=5)
p.adj <- runif(50, min=0, max=0.3)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
## And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(50, min=-2, max=9)
p.adj <- runif(50, min=0, max=0.7)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C2$Condition <- "Normoxia"
## Combine the DF and add parameters for e.g. thresholds you apply to extract genes:
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
DF_Iput$Frequency <-1
#---------------------------
#Plot
pdf("AlluvianPlot_Method_Overview.pdf")# Open a pdf file , paper="a4r" --> landscape A4
par(oma=c(2,2,8,2), mar = c(2, 2, 0.1, 2)+0.1)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
alluvial(DF_Iput[,c(4:7,1)], freq=DF_Iput$Frequency,
col = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
border = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
hide = DF_Iput$Frequency == 0,
cex = 0.3,
cex.axis = 0.5)
mtext("Alluvian Plot:Overview", side=3, line=6, cex=1.2, col="black", outer=TRUE)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
mtext("Method", side=3, line=5, cex=0.8, col="black", outer=TRUE)
mtext("188 Metabolites per Sample", side=2, line=0, cex=0.8, col="black", outer=TRUE)
mtext("eV", side=3, line=4, adj=0, cex=0.6, col="blue", outer=TRUE)
mtext("KO", side=3, line=3, adj=0, cex=0.6, col="red", outer=TRUE)
#mtext("XXX", side=3, line=2, adj=0, cex=0.6, col="mediumaquamarine", outer=TRUE)
#mtext("XXX", side=3, line=1, adj=0, cex=0.6, col="mediumorchid", outer=TRUE)
#mtext("XXX", side=3, line=0, adj=0, cex=0.6, col="grey", outer=TRUE)
dev.off()# Close the pdf file
#------------------------------
# Make an example DF:
## For example condition one is KO versus WT from cell cultured in Hypoxia
Gene <- name(50)
Log2FC <- runif(50, min=-5, max=5)
p.adj <- runif(50, min=0, max=0.2)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
## And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(50, min=-2, max=9)
p.adj <- runif(50, min=0, max=0.1)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C2$Condition <- "Normoxia"
## Combine the DF and add parameters for e.g. thresholds you apply to extract genes:
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
DF_Iput$Frequency <-1
#---------------------------
#Plot
pdf("AlluvianPlot_Method_Overview.pdf")# Open a pdf file , paper="a4r" --> landscape A4
par(oma=c(2,2,8,2), mar = c(2, 2, 0.1, 2)+0.1)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
alluvial(DF_Iput[,c(4:7,1)], freq=DF_Iput$Frequency,
col = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
border = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
hide = DF_Iput$Frequency == 0,
cex = 0.3,
cex.axis = 0.5)
mtext("Alluvian Plot:Overview", side=3, line=6, cex=1.2, col="black", outer=TRUE)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
mtext("Method", side=3, line=5, cex=0.8, col="black", outer=TRUE)
mtext("188 Metabolites per Sample", side=2, line=0, cex=0.8, col="black", outer=TRUE)
mtext("eV", side=3, line=4, adj=0, cex=0.6, col="blue", outer=TRUE)
mtext("KO", side=3, line=3, adj=0, cex=0.6, col="red", outer=TRUE)
#mtext("XXX", side=3, line=2, adj=0, cex=0.6, col="mediumaquamarine", outer=TRUE)
#mtext("XXX", side=3, line=1, adj=0, cex=0.6, col="mediumorchid", outer=TRUE)
#mtext("XXX", side=3, line=0, adj=0, cex=0.6, col="grey", outer=TRUE)
dev.off()# Close the pdf file
#------------------------------
# Make an example DF:
## For example condition one is KO versus WT from cell cultured in Hypoxia
Gene <- name(50)
Log2FC <- runif(50, min=-5, max=5)
p.adj <- runif(50, min=0, max=0.2)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
## And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(50, min=-2, max=9)
p.adj <- runif(50, min=0, max=0.1)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C2$Condition <- "Normoxia"
## Combine the DF and add parameters for e.g. thresholds you apply to extract genes:
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
DF_Iput$Frequency <-1
#---------------------------
#Plot
pdf("AlluvianPlot_Method_Overview.pdf")# Open a pdf file , paper="a4r" --> landscape A4
par(oma=c(2,2,8,2), mar = c(2, 2, 0.1, 2)+0.1)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
alluvial(DF_Iput[,c(4:7,1)], freq=DF_Iput$Frequency,
col = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
border = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
hide = DF_Iput$Frequency == 0,
cex = 0.3,
cex.axis = 0.5)
mtext("Alluvian Plot:Overview", side=3, line=6, cex=1.2, col="black", outer=TRUE)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
mtext("Method", side=3, line=5, cex=0.8, col="black", outer=TRUE)
mtext("50 Genes per Sample", side=2, line=0, cex=0.8, col="black", outer=TRUE)
mtext("Hypoxia", side=3, line=4, adj=0, cex=0.6, col="blue", outer=TRUE)
mtext("Normoxia", side=3, line=3, adj=0, cex=0.6, col="red", outer=TRUE)
#mtext("XXX", side=3, line=2, adj=0, cex=0.6, col="mediumaquamarine", outer=TRUE)
#mtext("XXX", side=3, line=1, adj=0, cex=0.6, col="mediumorchid", outer=TRUE)
#mtext("XXX", side=3, line=0, adj=0, cex=0.6, col="grey", outer=TRUE)
dev.off()# Close the pdf file
#------------------------------
# Make an example DF:
## For example condition one is KO versus WT from cell cultured in Hypoxia
Gene <- name(50)
Log2FC <- runif(50, min=-5, max=5)
p.adj <- runif(50, min=0, max=0.2)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
## And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(50, min=-2, max=9)
p.adj <- runif(50, min=0, max=0.1)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C2$Condition <- "Normoxia"
## Combine the DF and add parameters for e.g. thresholds you apply to extract genes:
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
DF_Iput$Frequency <-1
#---------------------------
#Plot
pdf("Output_Figures\AlluvianPlot_Method_Overview.pdf")# Open a pdf file , paper="a4r" --> landscape A4
#------------------------------
# Make an example DF:
## For example condition one is KO versus WT from cell cultured in Hypoxia
Gene <- name(50)
Log2FC <- runif(50, min=-5, max=5)
p.adj <- runif(50, min=0, max=0.2)
DF_Input_C1 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C1$Condition <- "Hypoxia"
## And condition two is KO versus WT from cell cultured in Normoxia
Log2FC <- runif(50, min=-2, max=9)
p.adj <- runif(50, min=0, max=0.1)
DF_Input_C2 <- data.frame(Gene, Log2FC, p.adj, stringsAsFactors=FALSE)
DF_Input_C2$Condition <- "Normoxia"
## Combine the DF and add parameters for e.g. thresholds you apply to extract genes:
DF_Iput <-rbind(DF_Input_C1,DF_Input_C2)%>%
mutate(`Change` = case_when(Log2FC > 0.5  ~ 'UP',
Log2FC < -0.5 ~ 'DOWN',
TRUE ~ 'No Change')) %>%
mutate(`Significant` = case_when(p.adj <= 0.05  ~ 'YES',
p.adj > 0.05 ~ 'NO',
TRUE ~ 'FALSE')) %>%
mutate(`Significant Change` = case_when(Log2FC > 0.5 & p.adj <= 0.05  ~ 'UP',
Log2FC < -0.5 & p.adj <= 0.05 ~ 'DOWN',
TRUE ~ 'No Change'))
DF_Iput$Frequency <-1
#---------------------------
#Plot
pdf("Output_Figures/AlluvianPlot_Method_Overview.pdf")# Open a pdf file , paper="a4r" --> landscape A4
par(oma=c(2,2,8,2), mar = c(2, 2, 0.1, 2)+0.1)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
alluvial(DF_Iput[,c(4:7,1)], freq=DF_Iput$Frequency,
col = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
border = case_when(DF_Iput$Condition == "Hypoxia"  ~ 'blue',
DF_Iput$Condition == "Normoxia" ~ 'red',
TRUE ~ 'grey'),
hide = DF_Iput$Frequency == 0,
cex = 0.3,
cex.axis = 0.5)
mtext("Alluvian Plot:Overview", side=3, line=6, cex=1.2, col="black", outer=TRUE)#https://www.r-graph-gallery.com/74-margin-and-oma-cheatsheet.html
mtext("Method", side=3, line=5, cex=0.8, col="black", outer=TRUE)
mtext("50 Genes per Sample", side=2, line=0, cex=0.8, col="black", outer=TRUE)
mtext("Hypoxia", side=3, line=4, adj=0, cex=0.6, col="blue", outer=TRUE)
mtext("Normoxia", side=3, line=3, adj=0, cex=0.6, col="red", outer=TRUE)
#mtext("XXX", side=3, line=2, adj=0, cex=0.6, col="mediumaquamarine", outer=TRUE)
#mtext("XXX", side=3, line=1, adj=0, cex=0.6, col="mediumorchid", outer=TRUE)
#mtext("XXX", side=3, line=0, adj=0, cex=0.6, col="grey", outer=TRUE)
dev.off()# Close the pdf file
